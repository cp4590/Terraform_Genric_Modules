trigger:     
  - main
  - feature/*



jobs: 
- job: Teraform_Plan
  pool: ashirbad-pool
  dependsOn: Scanning_Job
  steps:
  - task: TerraformInstaller@1
    displayName: tool installer
    inputs:
      terraformVersion: 'latest'

  - task: TerraformTask@5
    displayName: Terraform Init
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/dev-Module'
      backendServiceArm: 'cptestazuresvc'
      backendAzureRmStorageAccountName: 'hcl9999999'
      backendAzureRmContainerName: 'hclcontainer'
      backendAzureRmKey: 'cp.tfstate'

  - task: TerraformTask@5
    displayName: Terraform Validate
    inputs:
      provider: 'azurerm'
      command: 'validate'
      workingDirectory: '$(System.DefaultWorkingDirectory)/dev-Module'
      

  - task: TerraformTask@5
    displayName: Terraform Plan
    inputs:
      provider: 'azurerm'
      command: 'plan'
      workingDirectory: '$(System.DefaultWorkingDirectory)/dev-Module'
      environmentServiceNameAzureRM: 'cptestazuresvc'

- job: Scanning_Job
  displayName: Tfsec scanning  
  pool: ashirbad-pool
  steps:
  - task: tfsec@1
    inputs:
      version: 'v1.26.0'
      dir: '$(System.DefaultWorkingDirectory)/dev-Module'
  
- job: Manual_Validation
  displayName: Manual Validation for plan 
  dependsOn: Teraform_Plan
  pool: server
  steps:
  - task: ManualValidation@1
    inputs:
      notifyUsers: 'chandrapal31@outlook.com,divya1993pratap@hotmail.com'
      approvers: 'chandrapal31@outlook.com,divya1993pratap@hotmail.com'
      instructions: 'Pls check and approve as per plan'

- job: Tearrform_Apply
  displayName: Terraform Apply
  dependsOn: Manual_Validation
  pool: ashirbad-pool
  steps:
  - task: TerraformInstaller@1
    displayName: tool installer
    inputs:
      terraformVersion: 'latest'
  - task: TerraformTask@5
    displayName: Terraform Init
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/dev-Module'
      backendServiceArm: 'cptestazuresvc'
      backendAzureRmStorageAccountName: 'hcl9999999'
      backendAzureRmContainerName: 'hclcontainer'
      backendAzureRmKey: 'cp.tfstate'

  - task: TerraformTask@5
    displayName: Terraform Apply
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: '$(System.DefaultWorkingDirectory)/dev-Module'
      commandOptions: '-auto-approve'
      environmentServiceNameAzureRM: 'cptestazuresvc'