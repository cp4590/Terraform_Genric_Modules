trigger: none
# - main
# - feature/*

jobs: 
- job: Teraform_Plan
  pool: ashirbad-pool
  steps:

  - task: TerraformInstaller@1
    inputs:
      terraformVersion: 'latest'
  - task: TerraformTask@5
    displayName: Terraform Init
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/dev-Module'
      backendServiceArm: 'cptestazuresvc'
      backendAzureRmStorageAccountName: 'hcl9999999'
      backendAzureRmContainerName: 'hclcontainer'
      backendAzureRmKey: 'cp.tfstate'

  - task: TerraformTask@5
    displayName: Terraform Validate
    inputs:
      provider: 'azurerm'
      command: 'validate'
      workingDirectory: '$(System.DefaultWorkingDirectory)/dev-Module'
      

  - task: TerraformTask@5
    displayName: Terraform Plan
    inputs:
      provider: 'azurerm'
      command: 'plan'
      workingDirectory: '$(System.DefaultWorkingDirectory)/dev-Module'
      environmentServiceNameAzureRM: 'cptestazuresvc'

- job: Scanning_Job
  displayName: Tfsec scanning   
  pool: ashirbad-pool
  steps:
  - task: tfsec@1
    inputs:
      version: 'v1.26.0'
      dir: '$(System.DefaultWorkingDirectory)'
  
- job: Manual_Validation
  displayName: Manual Validation for plan 
  dependsOn: Teraform_Plan
  pool: server
  steps:
  - task: ManualValidation@1
    inputs:
      notifyUsers: |
        chandrapal31@outlook.com
            
      approvers: |
        chandrapal31@outlook.com
           
      instructions: 'Pls approve as per plan'

- job: Tearrform_Apply
  displayName: Terraform Apply
  dependsOn: Manual_Validation
  pool: ashirbad-pool
  steps:
  # - task: TerraformInstaller@1
  #   inputs:
  #     terraformVersion: 'latest'
  # - task: TerraformTask@5
  #   displayName: Terraform Init
  #   inputs:
  #     provider: 'azurerm'
  #     command: 'init'
  #     workingDirectory: '$(System.DefaultWorkingDirectory)/dev-Module'
  #     backendServiceArm: 'cptestazuresvc'
  #     backendAzureRmStorageAccountName: 'hcl9999999'
  #     backendAzureRmContainerName: 'hclcontainer'
  #     backendAzureRmKey: 'cp.tfstate'

  - task: TerraformTask@5
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: '$(System.DefaultWorkingDirectory)/dev-Module'
      commandOptions: '-auto-approve'
      environmentServiceNameAzureRM: 'cptestazuresvc'