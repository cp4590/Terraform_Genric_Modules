name: Terraform parameter pipeline
trigger: none
pool: default

parameters:
- name: task
  displayName: Choose Task
  type: string
  default: init
  values: 
  - init
  - plan
  - apply
steps:
- task: TerraformTask@5
  displayName: Terraform init
  condition: eq('${{ parameters.task }}', 'init')

  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/dev-Module'
    backendServiceArm: 'cptestazuresvc'
    backendAzureRmStorageAccountName: 'hcl9999999'
    backendAzureRmContainerName: 'hclcontainer'
    backendAzureRmKey: 'cp.tfstate'

- task: TerraformTask@5
  displayName: Terraform plan
  condition: eq('${{ parameters.task }}', 'plan')
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/dev-Module'
    environmentServiceNameAzureRM: 'cptestazuresvc'

- task: TerraformTask@5
  displayName: Terraform apply
  condition: eq('${{ parameters.task }}', 'apply')
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/dev-Module'
    environmentServiceNameAzureRM: 'cptestazuresvc'
